<?xml version="1.0" encoding="utf-8" ?>
<!-- For more information on using transformations 
     see the web.config examples at http://go.microsoft.com/fwlink/?LinkId=214134. -->
<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <sitecore>
    <events>
      <event name="item:copied">
        <handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnItemCopied" xdt:Transform="InsertBefore(/configuration/sitecore/events/event/*)" />
      </event>
    </events>
    <pipelines>
      <httpRequestBegin>
        <processor type="Sitecore.Pipelines.HttpRequest.PageEditorHandleNoLayout, Sitecore.Kernel" xdt:Transform="InsertAfter(processor[contains(@type, 'Sitecore.Pipelines.HttpRequest.LayoutResolver, Sitecore.Kernel')])"/>
      </httpRequestBegin>
      <!-- Gets the validators, that will be executed when saving page in Page Editor-->
      <getPageEditorValidators xdt:Transform="Insert">
        <processor type="Sitecore.Pipelines.GetPageEditorValidators.CheckSettings, Sitecore.Kernel"/>
        <processor type="Sitecore.Pipelines.GetPageEditorValidators.GetItemValidators, Sitecore.Kernel"/>
        <processor type="Sitecore.Pipelines.GetPageEditorValidators.GetGlobalValidators, Sitecore.Kernel"/>
        <processor type="Sitecore.Pipelines.GetPageEditorValidators.GetFieldValidators, Sitecore.Kernel"/>
      </getPageEditorValidators>

      <!-- Item filtering. Used for publishing items on the fly when a web site runs in live mode. -->
      <filterItem xdt:Transform="Replace">
        <processor type="Sitecore.Pipelines.FilterItem.CheckIfFilteringIsActive, Sitecore.Kernel"/>
        <processor type="Sitecore.Pipelines.FilterItem.DisableApprovedVersionFiltering, Sitecore.Kernel"/>
        <processor type="Sitecore.Pipelines.FilterItem.GetPublishedVersionOfItem, Sitecore.Kernel"/>
        <processor type="Sitecore.Pipelines.FilterItem.EnsureFilteredItem, Sitecore.Kernel"/>
      </filterItem>
    </pipelines>
    <processors>
      <saveUI>
        <processor mode="on" type="Sitecore.Pipelines.Save.CheckBaseTemplateFieldChange, Sitecore.Kernel" xdt:Transform="InsertAfter(processor[contains(@type, 'Sitecore.Pipelines.Save.Lock, Sitecore.Kernel')])"/>
      </saveUI>
    </processors>

    <mediaLibrary>
      <!-- MEDIA PROVIDER
   The media provider used to generate URLs, create media items, control media caching, parse media requests, and other
   media related functionality.      
-->
      <mediaProvider type="Sitecore.Resources.Media.MediaProvider, Sitecore.Kernel" xdt:Transform="InsertBefore(/configuration/sitecore/mediaLibrary/*)"/>
    </mediaLibrary>

    <linkManager defaultProvider="sitecore">
      <providers>
        <clear/>
        <add name="sitecore" type="Sitecore.Links.LinkProvider, Sitecore.Kernel" addAspxExtension="true" alwaysIncludeServerUrl="false" encodeNames="true" languageEmbedding="asNeeded" languageLocation="filePath" lowercaseUrls="false" shortenUrls="true" useDisplayName="false" xdt:Transform="SetAttributes(lowercaseUrls)" xdt:Locator="Match(name)"/>
      </providers>
    </linkManager>
    
    <sites>
      <site name="shell" analyticsDefinitions="content" xdt:Transform="SetAttributes(analyticsDefinitions)" xdt:Locator="Match(name)"/>
    </sites>
    <settings>
      <!--  ITEM CLONING NON INHERITED FIELDS
      Specifies a pipe-separated list of field names or field IDs which should be not be inherited by clones from their source item,
      in addition to the following fields from the standard template that are never be inherited: 
        Updated, Updated by, Revision, Created, Created by, Source, Workflow, Workflow State, Lock
      Example: "__Renderings" (or "{F1A1FE9E-A60C-4DDB-A3A0-BB5B29FE732E}") will exclude the __Renderings field (also known as the 
      Layout field) so that clones do not inherit presentation details from their source items.
      Default value: ""
-->
      <setting name="ItemCloning.NonInheritedFields" value="" xdt:Transform="Insert"/>

      <!--  MEDIA - ENABLE RANGE RETRIEVAL REQUEST
      Enables or disables range retrieval requests (see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2)
-->
      <setting name="Media.EnableRangeRetrievalRequest" value="true" xdt:Transform="Insert"/>

      <!--  WEB EDIT ENABLE VALIDATION
      If true, the Page Editor will execute item and field validation rules whenever a user tries to save items in the Page Editor.
      Only 'Critical' and 'Fatal' validators are evaluated, and item validation rules are executed for the current context item only.
      Field validation rules are only executed for fields that the current user can modify in the Page Editor.
      Default value: true
-->
      <setting name="WebEdit.EnableValidation" value="true" xdt:Transform="Insert"/>

      <!-- HTML EDITOR REMOVE SCRIPTS
      If true, the rich text editor removes script tags from RTE field values before saving. Setting the value to true reduces the potential for cross-site scripting and other script-related issues.
      Default value: true
-->
      <setting name="HtmlEditor.RemoveScripts" value="true" xdt:Transform="Insert" xdt:Locator="XPath(parent::*[not(contains(@name, 'HtmlEditor.RemoveScripts'))])" />

      <!--  MEDIA ALWAYS INCLUDE SERVER URL
      If true, Sitecore will generate absolute URLs when it uses the MediaProvider API and/or the link provider to render media URLs.
      If blank, Sitecore will use the same value as the alwaysIncludeServerUrl attribute from the link provider.
      Default value: "" (use the value from the link provider)
-->
      <setting name="Media.AlwaysIncludeServerUrl" value="" xdt:Locator="XPath(parent::*[not(contains(@name, 'Media.AlwaysIncludeServerUrl'))])" />

      <!-- MEDIA - DEFAULT IMAGE BACKGROUND COLOR
      The default background color for dynamically resizing images to different aspect ratios than the originals. 
      Sitecore applies this background color only for image types that do not support transparency (image/jpeg, image/gif and image/bmp).
      When resizing any other image types (including image/png), Sitecore always applies a transparent background.
      You can specify a color name (such as Black or Red) or a hex color code (such as #CE55E2).
      If you specify no value, Sitecore applies a black background color when resizing such images. 
      Default value: "" 
-->
      <setting name="Media.DefaultImageBackgroundColor" value="" xdt:Locator="XPath(parent::*[not(contains(@name, 'Media.DefaultImageBackgroundColor'))])" />

      <!--  MEDIA - RESIZING - QUALITY
      Specifies the level of compression to use when resizing images. 
      See also the System.Drawing.Imaging.Encoder.Quality field.
      The range of values is 0 (lowest quality) to 100 (highest quality).
      Default value: 95
-->
      <setting name="Media.Resizing.Quality" value="95" xdt:Locator="XPath(parent::*[not(contains(@name, 'Media.Resizing.Quality'))])" />
      <!--  MEDIA - RESIZING - COMPOSITING MODE
      Specifies how the source colors are combined with the background colors when resizing images.
      See also the System.Drawing.Drawing2D.CompositingMode enum.
      Valid values:  SourceOver  (the source color is blended with the background color, as determined by the alpha component of the source color)
                     SourceCopy  (the source color overwrites the background color)
      Default value: SourceCopy
-->
      <setting name="Media.Resizing.CompositingMode" value="SourceCopy" xdt:Locator="XPath(parent::*[not(contains(@name, 'Media.Resizing.CompositingMode'))])" />
      <!--  MEDIA - RESIZING - PIXEL OFFSET MODE
      Specifies how pixels are offset when resizing images. 
      See also the System.Drawing.Drawing2D.PixelOffsetMode enum.
      Valid values:  Default     (default)
                     HighSpeed   (high speed, low quality)
                     HighQuality (high quality, low speed)
                     None        (no pixel offset)
                     Half        (pixels are offset by -.5 units, for high speed antialiasing)
      Default value: Half
-->
      <setting name="Media.Resizing.PixelOffsetMode" value="Half" xdt:Locator="XPath(parent::*[not(contains(@name, 'Media.Resizing.PixelOffsetMode'))])" />

      <!-- RENDERING - SITE RESOLVING MATCH CURRENT LANGUAGE
      Affects how cross-site links are rendered when Rendering.SiteResolving is enabled.
      If true, the link provider will take the language attribute of the site definitions into consideration when resolving
      which site/hostname to use when rendering a cross-site link.
      Default value: true
-->
      <setting name="Rendering.SiteResolvingMatchCurrentLanguage" value="true" xdt:Locator="XPath(parent::*[not(contains(@name, 'Rendering.SiteResolvingMatchCurrentLanguage'))])" />
      <!--  RENDERING - SITE RESOLVING MATCH CURRENT SITE
      Affects how cross-site links are rendered when Rendering.SiteResolving is enabled.
      If true, the link provider will check if the target item is located under the start item for the current site before it
      tries to find a match in the full list of site definitions. This ensures that when the target item can be resolved using
      the current site, the target link will not change to a different site/hostname.
      Default value: true
-->
      <setting name="Rendering.SiteResolvingMatchCurrentSite" value="true" xdt:Locator="XPath(parent::*[not(contains(@name, 'Rendering.SiteResolvingMatchCurrentSite'))])" />
    </settings>
  </sitecore>
</configuration>